{# --------------------- 78 character baseline --------------------------- #}\
Welcome to ${config['app_name']}.

This application is built on Cement, and is ready to rock!  Out of the box you
already have:

{% for feature in features %}\
    * $feature
{% end %}\

If your config file is setup right, you should notice that your app is already 
loading an 'example' plugin.  Plugins are enabled in a number of ways, but most 
generally by adding the plugin name to 'enabled_plugins' in your applications 
configuration, or by setting 'enable_plugin=true' in each plugin's 
configuration (in the plugin_config_dir plugins.d/plugin_name.conf) under the
'[plugin_name]' block.

The included example plugin is a great starting point to learn how to build an
application on top of the Cement Framework.  The following files and 
directories should be explored:
 
    * ./satcli/bootstrap/example.py
    * ./satcli/controllers/example.py
    * ./satcli/model/example.py
    * ./satcli/templates/example/


This command is defined in the RootController in: 

    satcli/controllers/root.py 
    

Additionally, the output of this command is rendered by the Genshi templating 
engine.  The template is at satcli/templates/root/get-started.txt.
You can find documentation here on the template syntax here:

    * $genshi_link
    
    
That said, you can also render the output of commands as JSON.  Don't believe
me? Just run it again with the --json flag. 

To make the included 'example' plugin a permanent part of your application you 
simply need to add the following to satcli/bootstrap/root.py:

    from satcli.bootstrap import example
    
    
That said, by following the example plugin you can easily create built in code
or additional plugins in the same fashion.

Go forth, and code!
